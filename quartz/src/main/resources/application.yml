my:
  aaa: aa
server:
  port: 8003
spring:
  application:
    name: quartz
  profiles:
    active: dev
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    url: jdbc:mysql://101.200.228.9/quartz?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
    username: root
    password: 123456
    initialSize: 5
    minIdle: 5
    maxActive: 20
    maxWait: 60000
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    filters: stat,wall
    connectionProperties:
      druid:
        stat:
          mergeSql: true
          slowSqlMillis: 5000
    druid:
      stat-view-servlet:
        login-username: admin
        login-password: 888888
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
  quartz:
    jdbc:
      # 初始化Quartz表结构,项目第一次启动配置程always,然后改成never 否则已生成的job会被初始化掉
      initialize-schema: never
    job-store-type: jdbc
    properties:
      org:
        quartz:
          scheduler:
            instanceName: etlCleanScheduler
            instanceId: AUTO
          jobStore:
            class: org.quartz.impl.jdbcjobstore.JobStoreTX
            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
            tablePrefix: QRTZ_  #Quartz表前缀
            isClustered: true
            clusterCheckinInterval: 10000
            useProperties: false
          threadPool:
            class: org.quartz.simpl.SimpleThreadPool
            #线程数 一个任务使用一个线程
            threadCount: 100
            threadPriority: 5
            threadsInheritContextClassLoaderOfInitializingThread: true
eureka:
  instance:
    hostname: 127.0.0.1
    instance:
    ##客户端自己告诉服务端多少秒发送一个心跳包
    lease-renewal-interval-in-seconds: 1
    ##客户端告诉服务端等待多少秒之后如果还是没有收到心跳包，那就把我剔除吧
    lease-expiration-duration-in-seconds: 2
  client:
    serviceUrl:
      defaultZone: http://127.0.0.1:8081/eureka/
    ###是否需要注册到eureka上
    register-with-eureka: true
    ###需要检索服务
    fetch-registry: true
  server:
    ##是否开启自我保护机制
    enable-self-preservation: false
    ##超过20之后才剔除
    eviction-interval-timer-in-ms: 20000
